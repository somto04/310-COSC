import pytest
import fastapi
from fastapi.testclient import TestClient
from app.app import app

client = TestClient(app)

#Movie integration tests:
def test_GetMovies():
    response = client.get("/movies")
    assert response.status_code == 200
    assert isinstance(response.json(), list)
    
def test_CreateMovie():
    newMovie = {
        "movieName": "Test Movie",
        "yearReleased": 2024,
        "actors": ["Actor 1", "Actor 2"],
        "genre": "Test Genre",
        "length": 120
    }
    createResponse = client.post("/movies", json=newMovie)
    assert createResponse.status_code == 201
    createdMovie = createResponse.json()
    assert createdMovie["movieName"] == newMovie["movieName"]
    assert createdMovie["yearReleased"] == newMovie["yearReleased"]
    assert createdMovie["genre"] == newMovie["genre"]
    assert createdMovie["length"] == newMovie["length"]
    assert "movieId" in createdMovie  # ID is generated by the server

def test_DeleteMovie():
    newMovie = {
        "movieName": "Movie to Delete",
        "yearReleased": 2023,
        "actors": [],
        "genre": "Genre",
        "length": 90
    }   
    createResponse = client.post("/movies", json=newMovie)
    assert createResponse.status_code == 201
    movieId = createResponse.json()["movieId"]
    
    deleteResponse = client.delete(f"/movies/{movieId}")
    assert deleteResponse.status_code == 204
    
    getResponse = client.get(f"/movies/{movieId}")
    assert getResponse.status_code == 404
    
#Movie unit tests: testing individual service funtions 
def test_listMovies():
    from app.services.movieService import listMovies
    assert isinstance(listMovies(), list)
    
   